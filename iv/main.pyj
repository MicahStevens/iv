# vim:fileencoding=utf-8
# License: GPL v3 Copyright: 2016, Kovid Goyal <kovid at kovidgoyal.net>
from __python__ import hash_literals, bound_methods
from pythonize import strings
strings()

from grid import create_grid, update_loaded_images, onkeydown as grid_onkeydown
from single import create_single, set_image

tnum = 0

window.messages_to_python = v'[]'

window.get_messages_from_javascript = def get_messages_from_javascript():
    ans = JSON.stringify(window.messages_to_python)
    window.messages_to_python = v'[]'
    return ans

window.send_message_to_python = def send_message_to_python(func, **kw):
    nonlocal tnum
    msg = {}
    Object.assign(msg, kw)
    msg['func'] = func
    window.messages_to_python.push(msg)
    tnum += 1
    document.title = 't' + tnum


def report_error(msg, script_url, line_number, column_number, error_object):
    print(msg, line_number, column_number)


window.show_image = def show_image(url):
    document.getElementById('grid').style.display = 'none'
    document.getElementById('single').style.display = 'block'
    set_image(url)
    window.send_message_to_python('showing_image', url=url)

window.show_grid = def show_grid():
    document.getElementById('single').style.display = 'none'
    document.getElementById('grid').style.display = 'block'
    window.send_message_to_python('showing_grid')

window.onload = def():
    window.onerror = report_error
    document.body.appendChild(create_grid())
    document.body.appendChild(create_single())
    if Object.keys(window.image_data).length > 1:
        show_grid()
    else:
        for url in window.image_data:
            show_image(url)
    update_loaded_images()
    document.addEventListener('keydown', def(ev):
        handler = None
        if document.getElementById('grid').style.display is not 'none':
            handler = grid_onkeydown
        if handler:
            if handler(ev):
                ev.preventDefault(), ev.stopPropagation()
    , True)
